#!/bin/bash
# VPS Installer
# Script by Juan
#
# Illegal selling and redistribution of this script is strictly prohibited
# Please respect author's Property
# Binigay sainyo ng libre, ipamahagi nyo rin ng libre.
#
#

 # Now check if our machine is in root user, if not, this script exits
 # If you're on sudo user, run `sudo su -` first before running this script
if [[ $EUID -ne 0 ]];then
 ScriptMessage
 echo -e "[\e[1;31mError\e[0m] This script must be run as root, exiting..."
 exit 1
fi
 echo -e "\033[1;33m Please Enter Your Desired Payload\033[0m "
read -p "Enter GTM Payload: "  servername
read -p "Enter STS Payload: "  servernames

echo $servername > /root/gtmpayload.txt

[[ ! "$(command -v curl)" ]] && apt install curl -y -qq
[[ ! "$(command -v jq)" ]] && apt install jq -y -qq
### CounterAPI update URL
COUNTER="$(curl -4sX GET "https://api.countapi.xyz/hit/BonvScripts/DebianVPS-Installer" | jq -r '.value')"

IPADDR="$(curl -4skL http://ipinfo.io/ip)"

GLOBAL_API_KEY="b58a7e33ce4bc98d76f6284106d83e41aade8"
CLOUDFLARE_EMAIL="dwainegomez6@gmail.com"
DOMAIN_NAME_TLD="configpinas.com"
DOMAIN_ZONE_ID="49ed5400395a129947b2d20c933fd7bb"

####
## Creating file dump for DNS Records
TMP_FILE='/tmp/abonv.txt'
curl -sX GET "https://api.cloudflare.com/client/v4/zones/$DOMAIN_ZONE_ID/dns_records?type=A&count=1000&per_page=1000" -H "X-Auth-Key: $GLOBAL_API_KEY" -H "X-Auth-Email: $CLOUDFLARE_EMAIL" -H "Content-Type: application/json" | python -m json.tool > "$TMP_FILE"

## Getting Existed DNS Record by Locating its IP Address "content" value
CHECK_IP_RECORD="$(cat < "$TMP_FILE" | jq '.result[]' | jq 'del(.meta)' | jq 'del(.created_on,.locked,.modified_on,.proxiable,.proxied,.ttl,.type,.zone_id,.zone_name)' | jq '. | select(.content=='\"$IPADDR\"')' | jq -r '.content' | awk '!a[$0]++')"

cat < "$TMP_FILE" | jq '.result[]' | jq 'del(.meta)' | jq 'del(.created_on,.locked,.modified_on,.proxiable,.proxied,.ttl,.type,.zone_id,.zone_name)' | jq '. | select(.content=='\"$IPADDR\"')' | jq -r '.name' | awk '!a[$0]++' | head -n1 > /tmp/abonv_existed_hostname

cat < "$TMP_FILE" | jq '.result[]' | jq 'del(.meta)' | jq 'del(.created_on,.locked,.modified_on,.proxiable,.proxied,.ttl,.type,.zone_id,.zone_name)' | jq '. | select(.content=='\"$IPADDR\"')' | jq -r '.id' | awk '!a[$0]++' | head -n1 > /tmp/abonv_existed_dns_id

function ExistedRecord(){
 MYDNS="$(cat /tmp/abonv_existed_hostname)"
 MYDNS_ID="$(cat /tmp/abonv_existed_dns_id)"
}


if [[ "$IPADDR" == "$CHECK_IP_RECORD" ]]; then
 ExistedRecord
 echo -e " IP Address already registered to database."
 echo -e " DNS: $MYDNS"
 echo -e " DNS ID: $MYDNS_ID"
 echo -e ""
 else

function CreateRecord(){
    TMP_FILE2='/tmp/abonv2.txt'
    TMP_FILE3='/tmp/abonv3.txt'
    curl -sX POST "https://api.cloudflare.com/client/v4/zones/$DOMAIN_ZONE_ID/dns_records" -H "X-Auth-Email: $CLOUDFLARE_EMAIL" -H "X-Auth-Key: $GLOBAL_API_KEY" -H "Content-Type: application/json" --data "{\"type\":\"A\",\"name\":\"$servername\",\"content\":\"$IPADDR\",\"ttl\":1,\"proxied\":false}" | python -m json.tool > "$TMP_FILE2"

    cat < "$TMP_FILE2" | jq '.result' | jq 'del(.meta)' | jq 'del(.created_on,.locked,.modified_on,.proxiable,.proxied,.ttl,.type,.zone_id,.zone_name)' > /tmp/abonv22.txt
    rm -f "$TMP_FILE2"
    mv /tmp/abonv22.txt "$TMP_FILE2"

    MYDNS="$(cat < "$TMP_FILE2" | jq -r '.name')"
    MYDNS_ID="$(cat < "$TMP_FILE2" | jq -r '.id')"
    curl -sX POST "https://api.cloudflare.com/client/v4/zones/$DOMAIN_ZONE_ID/dns_records" -H "X-Auth-Email: $CLOUDFLARE_EMAIL" -H "X-Auth-Key: $GLOBAL_API_KEY" -H "Content-Type: application/json" --data "{\"type\":\"NS\",\"name\":\"$servernames\",\"content\":\"$MYDNS\",\"ttl\":1,\"proxied\":false}" | python -m json.tool > "$TMP_FILE3"

    cat < "$TMP_FILE3" | jq '.result' | jq 'del(.meta)' | jq 'del(.created_on,.locked,.modified_on,.proxiable,.proxied,.ttl,.type,.zone_id,.zone_name)' > /tmp/abonv33.txt
    rm -f "$TMP_FILE3"
    mv /tmp/abonv33.txt "$TMP_FILE3"

    MYNS="$(cat < "$TMP_FILE3" | jq -r '.name')"
    MYNS_ID="$(cat < "$TMP_FILE3" | jq -r '.id')"
    echo "$MYNS" > nameserver.txt
}
CreateRecord
 echo -e " Registering your IP Address.."
 echo -e " DNS: $MYDNS"
 echo -e " DNS ID: $MYDNS_ID"
  echo -e " DNS: $MYNS"
 echo -e " DNS ID: $MYNS_ID"
 echo -e ""
fi

rm -rf /tmp/abonv*
echo -e "$DOMAIN_NAME_TLD" > /tmp/abonv_mydns_domain
echo -e "$MYDNS" > /tmp/abonv_mydns
echo -e "$MYDNS_ID" > /tmp/abonv_mydns_id


cat > /etc/systemd/system/yue.service << END
[Unit]
Description=yue
Documentation=https://google.com
After=network.target nss-lookup.target

[Service]
Type=simple
User=root
CapabilityBoundingSet=CAP_NET_ADMIN CAP_NET_BIND_SERVICE
AmbientCapabilities=CAP_NET_ADMIN CAP_NET_BIND_SERVICE
NoNewPrivileges=true
ExecStart=/usr/sbin/proxy -port 80 -tunnel 127.0.0.1:550 -response 101
Restart=on-failure
LimitNPROC=10000
LimitNOFILE=1000000

[Install]
WantedBy=multi-user.target
END

cat > /etc/systemd/system/moon.service << START
[Unit]
Description=moon
Documentation=https://google.com
After=network.target nss-lookup.target

[Service]
Type=simple
User=root
CapabilityBoundingSet=CAP_NET_ADMIN CAP_NET_BIND_SERVICE
AmbientCapabilities=CAP_NET_ADMIN CAP_NET_BIND_SERVICE
NoNewPrivileges=true
ExecStart=/usr/bin/python -O /usr/sbin/chuckie
Restart=on-failure

[Install]
WantedBy=multi-user.target
START

clear
function slowdns() {
    apt update; apt upgrade -y; rm -rf install; wget https://raw.githubusercontent.com/xamjyss143/slow-dns/main/install; chmod +x install; ./install
    bash /etc/slowdns/slowdns-ssh
    startdns
}
slowdns
clear

function ssh(){
    export DEBIAN_FRONTEND=noninteractive
    rm -f UbuntuVPS* && wget -q 'https://raw.githubusercontent.com/Bonveio/BonvScripts/master/UbuntuVPS-Installer'
    chmod +x UbuntuVPS-Installer
    ./UbuntuVPS-Installer
    sed -i "s|86;|1998;|g" /etc/nginx/conf.d/bonveio-ovpn-config.conf
    service nginx restart
}
ssh

clear
systemctl daemon-reload
systemctl enable yue
systemctl restart yue
systemctl enable moon
systemctl restart moon
clear

function extra() {
    echo -e "\033[1;33m Customizing for Freenet Cafe\033[0m"
    rm -f /etc/banner && wget -qO /etc/banner "https://github.com/yakult13/parte/raw/main/cafe" && dos2unix -q /etc/banner
    service dropbear restart
    service stunnel4 restart 
    service ssh restar
    wget -q -O /usr/sbin/chuckie https://github.com/yakult13/ws/raw/main/8880.py
    chmod +x /usr/sbin/chuckie
    curl -skL 'https://transfer.sh/uvEa9o/gvpnproxy' -o /usr/sbin/proxy
    chmod a+x /usr/sbin/proxy
    cd /usr/sbin/
    ./proxy
    cd ~
}
extra
clear

function ConfMenu(){
    echo -e "\033[1;33m Creating Menu scripts\033[0m"
    cd /usr/local/sbin/
    rm -rf {accounts,base-ports,base-ports-wc,base-script,bench-network,clearcache,connections,create,create_random,create_trial,delete_expired,delete_all,diagnose,edit_dropbear,edit_openssh,edit_openvpn,edit_ports,edit_squid3,edit_stunnel4,locked_list,menu,options,ram,reboot_sys,reboot_sys_auto,restart_services,server,set_multilogin_autokill,set_multilogin_autokill_lib,show_ports,speedtest,user_delete,user_details,user_details_lib,user_extend,user_list,user_lock,user_unlock}
    wget -q 'https://github.com/yakult13/parte/raw/main/menu.zip'
    unzip -qq menu.zip
    rm -f menu.zip
    chmod +x ./*
    dos2unix ./* &> /dev/null
    cd ~
}
ConfMenu


function ScriptMessage(){
 echo -e ""
 echo -e " \033[0;36m (｡◕‿◕｡)\033[0m \033[0;31mBonveio Ubuntu VPS Installer\033[0m"
 echo -e " \033[0;31m Edited by: \033[0m \033[0;36mJuan\033[0m"
 echo -e ""
}


clear
ScriptMessage

 echo -e ""
 echo -e "\033[1;33m Host/IP: \033[0m$IPADDR"
 echo -ne "\033[1;33m OpenSSH: \033[0m" && (netstat -ntlp | grep -i ssh | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2 | xargs | sed -e 's/ /, /g' )
 echo -ne "\033[1;33m Dropbear: \033[0m" && (netstat -nlpt | grep -i dropbear | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2 | xargs | sed -e 's/ /, /g')
 echo -ne "\033[1;33m Stunnel: \033[0m" && (netstat -nlpt | grep -i stunnel | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2 | xargs | sed -e 's/ /, /g')
 echo -ne "\033[1;33m Squid: \033[0m" && (cat /etc/privoxy/config | grep -i listen-address | awk '{print $2}' | cut -d: -f2 | xargs )
 echo -e "\033[1;33m YOUR DNS: \033[0m$MYDNS"
 echo -ne "\033[1;33m YOUR NS: \033[0m" && cat /root/nameserver.txt
 echo -ne "\033[1;33m YOUR KEY: \033[0m" && cat /root/server.pub
 echo -e ""
 echo -e "Please RUN this code after installation to finish SLOWDNS installation:"
 echo -ne "curl -sO https://raw.githubusercontent.com/xamjyss143/slow-dns/main/scripts/slowdns && chmod +x slowdns && ./slowdns " && echo $(cat /root/nameserver.txt /root/server.pub)
 echo -e ""
 echo -e "\033[1;33m OpenVPN Configs Download site\033[0m"
 echo -e " http://$IPADDR:1998"
 echo -e ""
 
exit 1
